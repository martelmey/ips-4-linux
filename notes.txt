+++
=== +++
=== ===
=== === === +++
=== +++ LINKS
=== === === +++
=== ===
=== +++
+++

Solaris 11.4 SRU Patch Index:
https://support.oracle.com/epmos/faces/DocumentDisplay?_afrLoop=477603020976996&parent=DOCUMENT&sourceId=1928542.1&id=2433412.1&_afrWindowMode=0&_adf.ctrl-state=iydfnhbrw_171
https://pkg-register.oracle.com/
http://web.archive.org/web/20080705162714/http://developers.sun.com/

man pkg.sysrepo(8)
https://docs.oracle.com/cd/E88353_01/html/E72487/pkg.sysrepo-8.html#scrolltoc

pkg.mirror cronjob for pkgrecv
https://docs.oracle.com/cd/E36784_01/html/E36805/pkgmirror.html

ref for reposetuplocal()
https://docs.oracle.com/cd/E37838_01/html/E60982/cpfromzip.html#scrolltoc

locales
https://docs.oracle.com/cd/E23824_01/html/E26033/glmen.html#scrolltoc

cc
https://stackoverflow.com/questions/9177678/how-i-can-get-a-cross-compiler-under-ubuntu-for-sparc-target
https://www.cis.upenn.edu/~milom/cross-compile.html
https://linux.101hacks.com/unix/ldconfig/
https://gcc.gnu.org/onlinedocs/libiberty/Functions.html#Functions
https://www.gnu.org/software/libc/
https://sourceware.org/glibc/wiki/Testing/Builds
https://gcc.gnu.org/onlinedocs/gccint/
https://stackoverflow.com/questions/1726042/recipe-for-compiling-binutils-gcc-together
http://www.linuxfromscratch.org/lfs/view/development/index.html
https://gcc.gnu.org/install/build.html
http://www.tldp.org/HOWTO/Software-Building-HOWTO.html
sparc
setup 11.4 env
https://docs.oracle.com/cd/E53394_01/html/E54833/glyfz.html#scrolltoc
https://docs.oracle.com/cd/E37838_01/html/E61049/gnwre.html#scrolltoc
https://gcc.gnu.org/onlinedocs/gcc/SPARC-Options.html
https://wiki.debian.org/CrossToolchains
https://vlsiwiki.soe.ucsc.edu/index.php/Desktop_Setup_-_Ubuntu_10.04
https://buildroot.org/downloads/manual/manual.html#requirement
https://wiki.debian.org/CrossToolchains

rhel
https://developers.redhat.com/products/developertoolset/hello-world#fndtn-windows
https://www.cyberciti.biz/faq/centos-linux-install-gcc-c-c-compiler/


+++
=== +++
=== ===
=== === === +++
=== +++ TASKS
=== === === +++
=== ===
=== +++
+++



+++
=== +++
=== ===
=== === === +++
=== +++ VARS
=== === === +++
=== ===
=== +++
+++

REPOSDIR=/export/pkgs/repos
YUMDIR=
IPSDIR=/export/pkgs/repos/solsr
HTTP_PROXY=http://192.168.60.250:8008
SRKEY=/root/pkg.oracle.com.key.pem
SRCERT=/root/pkg.oracle.com.certificate.pem
PKGSSL=/var/pkg/ssl
COLLTAR=/export/pkgs/splunk/sparc-collectd.tar
COLLPKG=
USRGRP=pkg5srv
KEYSTORE-/var/sadm/security
USRCERTS=~/.pkg/security
SYSREPO_HTTP_CONF=/system/volatile/pkg/sysrepo/sysrepo_httpd.conf

+++
=== +++
=== ===
=== === === +++
=== +++ REPOS
=== === === +++
=== ===
=== +++
+++
(OLD) (root domain and logical domain)
PUBLISHER                   TYPE     STATUS P LOCATION
solaris                     origin   online F file:///net/192.168.63.230/Shared/S11.4_GA_repo/
root@knpapp11:~# pkg publisher solaris
Publisher: solaris
Alias:
Origin URI: file:///net/192.168.63.230/Shared/S11.4_GA_repo/
Origin Status: Online
SSL Key: None
SSL Cert: None
Client UUID: 9f412c18-477f-11ea-a085-d7645c9bba67
Catalog Updated: January 30, 2020 at  8:20:55 PM
Enabled: Yes

(NEW)

+++
=== +++
=== ===
=== === === +++
=== +++ SERVICES
=== === === +++
=== ===
=== +++
+++

###         ###
   #########
###  ROOT   ###
   #########

(1)
svc:/application/pkg/system-repository:default
	- default: disabled
  - name: IPS System Repository
  - logfile: /var/svc/log/application-pkg-system-repository:default.log
  - manifest: /lib/svc/manifest/application/pkg/pkg-system-repository.xml
  - exec: /lib/svc/method/svc-pkg-sysrepo\ start

  - process: 20289, 20290, 20291, 20292, 20293 httpd

  config/cache_dir astring /var/cache/pkg/sysrepo
  config/cache_max count 2048
  config/host astring 127.0.0.1
  config/http_proxy astring ""
  config/https_proxy astring ""
  config/log_dir astring /var/log/pkg/sysrepo
  config/port count 1008
  config/runtime_dir astring /system/volatile/pkg/sysrepo

(2)
svc:/application/pkg/zones-proxyd:default
	- default: disabled
  - name: Zones Proxy Daemon
  - logfile: /var/svc/log/application-pkg-zones-proxyd:default.log
  - manifest: /lib/svc/manifest/application/pkg/zoneproxyd.xml
  - exec: /usr/lib/zones/zoneproxyd

  - process: 20314 zoneproxyd

  start/exec astring /usr/lib/zones/zoneproxyd
  start/user astring pkg5srv
  sysrepo/entities fmri svc:/application/pkg/system-repository

(3)
svc:/system/pkgserv:default
	- default: enabled
  - name: Flush package command database to disk (see pkgadm(8))
  - logfile: /var/svc/log/system-pkgserv:default.log
  - manifest: /lib/svc/manifest/system/pkgserv.xml
  - exec: /usr/bin/pkgadm\ sync

  config/cache_dir astring /var/cache/pkg/sysrepo
  config/cache_max count 2048
  config/host astring 127.0.0.1
  config/http_proxy astring ""
  config/https_proxy astring ""
  config/log_dir astring /var/log/pkg/sysrepo
  config/port count 1008
  config/runtime_dir astring /system/volatile/pkg/sysrepo

(4)
svc:/application/pkg/repositories-setup:default
	- default: enabled
  - name: IPS rpool/VARSHARE/pkg creation
  - logfile: /var/svc/log/application-pkg-repositories-setup:default.log
  - manifest: /lib/svc/manifest/application/pkg/pkg-repositories-setup.xml
  - exec: /lib/svc/method/svc-pkg-repositories-setup\ start

###         ###
   #########
###  LDOM   ###
   #########

(1)
svc:/application/pkg/system-repository:default
  (OLD)
  config/cache_dir astring /var/cache/pkg/sysrepo
  config/cache_max count 2048
  config/host astring 127.0.0.1
  config/http_proxy astring ""
  config/https_proxy astring ""
  config/log_dir astring /var/log/pkg/sysrepo
  config/port count 1008
  config/runtime_dir astring /system/volatile/pkg/sysrepo
  config/stability astring Evolving
  config/template_dir astring /etc/pkg/sysrepo
  config/value_authorization astring solaris.smf.value.pkg-sysrepo

(2)
svc:/application/pkg/zones-proxyd:default
(3)
svc:/system/pkgserv:default
(4)
svc:/application/pkg/repositories-setup:default

###         ###
   #########
### DEVHIAL ###
   #########

(2)
svc:/application/pkg/zones-proxy-client:default
  - default: enabled
  - name: Zones Proxy Client
  - logfile: /var/svc/log/application-pkg-zones-proxy-client:default.log
  - manifest: /lib/svc/manifest/application/pkg/zoneproxy-client.xml
  - exec: /usr/lib/zones/zoneproxy-client\ -s\ %{config/listen_host}:%{config/listen_port}

  - process: 5386 zoneproxy-client

  - listen_host: localhost
  - listen_port: 1008

  - sets: localhost:1008
(3)
svc:/system/pkgserv:default
  - default: enabled
  - name: Flush package command database to disk (see pkgadm(8))
  - logfile: /var/svc/log/system-pkgserv:default.log
  - manifest: /lib/svc/manifest/system/pkgserv.xml
  - exec: /usr/bin/pkgadm\ sync
(4)
svc:/application/pkg/repositories-setup:default
  - default: enabled
  - name: IPS rpool/VARSHARE/pkg creation
  - logfile: /var/svc/log/application-pkg-repositories-setup:default.log
  - manifest: /lib/svc/manifest/application/pkg/pkg-repositories-setup.xml
  - exec: /lib/svc/method/svc-pkg-repositories-setup\ start

+++
=== +++
=== ===
=== === === +++
=== +++ SOLDEV
=== === === +++
=== ===
=== +++
+++

as(1),  crle(1),  elfcompress(1), gprof(1), ld.so.1(1), ldd(1), mcs(1),
pvs(1), strip(1), exec(2), stat(2),  dldump(3C),  zlib(3),  dlopen(3C),
elf(3ELF), ar.h(3HEAD), a.out(5), attributes(7), sxadm(8), ld

+++
=== +++
=== ===
=== === === +++
=== +++ CMD REF
=== === === +++
=== ===
=== +++
+++

##########  ##########  ##########\/
####  ####  yum/dnf
##########  ##########  ##########\/

check
check-update
clean
deplist
info
install
  --best
list
  --installed
  --available
provides
  </usr/bin/gcc>
remove
repoinfo
repolist
search
updateinfo
upgrade


##########  ##########  ##########\/
####  ####  rpm
##########  ##########  ##########\/

---query [select-options] [query-options]
-q --list
--package
--group

##########  ##########  ##########\/
####  ####  gcc
##########  ##########  ##########\/

build_configargs
              additional configure arguments for build directories
  host_configargs
              additional configure arguments for host directories
  target_configargs
              additional configure arguments for target directories
  AR          AR for the host
  AS          AS for the host
  DLLTOOL     DLLTOOL for the host
  LD          LD for the host
  LIPO        LIPO for the host
  NM          NM for the host
  RANLIB      RANLIB for the host
  STRIP       STRIP for the host
  WINDRES     WINDRES for the host
  WINDMC      WINDMC for the host
  OBJCOPY     OBJCOPY for the host
  OBJDUMP     OBJDUMP for the host
  OTOOL       OTOOL for the host
  READELF     READELF for the host

-save-temps
-Wshadow
-fmudflap

-Wextra, -Wall: essential.

-Wfloat-equal: useful because usually testing floating-point numbers for equality is bad.

-Wundef: warn if an uninitialized identifier is evaluated in an #if directive.

-Wshadow: warn whenever a local variable shadows another local variable, parameter or global variable or whenever a built-in function is shadowed.

-Wpointer-arith: warn if anything depends upon the size of a function or of void.

-Wformat=2

-Wcast-align: warn whenever a pointer is cast such that the required alignment of the target is increased. For example, warn if a char * is cast to an int * on machines where integers can only be accessed at two- or four-byte boundaries.

-Wstrict-prototypes: warn if a function is declared or defined without specifying the argument types.

-Wstrict-overflow=5: warns about cases where the compiler optimizes based on the assumption that signed overflow does not occur. (The value 5 may be too strict, see the manual page.)

-Wwrite-strings: give string constants the type const char[length] so that copying the address of one into a non-const char * pointer will get a warning.

-Waggregate-return: warn if any functions that return structures or unions are defined or called.

-Wcast-qual: warn whenever a pointer is cast to remove a type qualifier from the target type*.

-Wswitch-default: warn whenever a switch statement does not have a default case*.

-Wswitch-enum: warn whenever a switch statement has an index of enumerated type and lacks a case for one or more of the named codes of that enumeration*.

-Wconversion: warn for implicit conversions that may alter a value*.

-Wunreachable-code: warn if the compiler detects that code will never be executed*

The -ftrapv function will cause the program to abort on signed integer overflow (formally "undefined behaviour" in C).
-fsanitize=signed-integer-overflow

-fverbose-asm is useful if you're compiling with -S to examine the assembly output - it adds some informative comments.

-finstrument-functions adds code to call user-supplied profiling functions at every function entry and exit point.

gcc -c [flags-go-here] -o myprog.o myprog.c

--host: In which system the generated program will run.
--build: In which system the program will be built.
--target: this option is only used to build a cross-compiling toolchain. When the tool chain generates executable program, in which target system the program will run.

'./configure --host=arm-linux --build=i686-pc-linux-gnu': the dynamically library is built on a x86 linux computer but will be used for a embedded arm linux system.

'./configure --target=i686-pc-linux-gnu --host=arm-linux --build=i686-pc-linux-gnu':
A gcc compiler is build on x86 linux computer. [--build]
The gcc will be executed on an embedded arm linux system.[--host]
But the gcc will generate the binary program, which run in a x86 linux system. [--target]

--build=the architecture of the build machine
--host=the architecture that you want the file to run on

‘make all’ Build programs, libraries, documentation, etc.
(Same as ‘make’.)
‘make install’ Install what needs to be installed.
‘make install-strip’ Same as ‘make install’, then strip debugging
symbols.
‘make uninstall’ The opposite of ‘make install’.
‘make clean’ Erase what has been built (the opposite of ‘make
all’).
‘make distclean’ Additionally erase anything ‘./configure’
created.
‘make check’ Run the test suite, if any.
‘make installcheck’ Check the installed programs or libraries, if
supported.
‘make dist’ Create PACKAGE-VERSION.tar.gz

Directory variable Default value
prefix /usr/ local
  exec-prefix prefix
    bindir exec-prefix/bin
    libdir exec-prefix/lib
    ...
  includedir prefix/include
  datarootdir prefix/share
    datadir datarootdir
    mandir datarootdir/man
    infodir datarootdir/info
  ...

CC C compiler command
CFLAGS C compiler flags
CXX C++ compiler command
CXXFLAGS C++ compiler flags
LDFLAGS linker flags
CPPFLAGS C/C++ preprocessor flags
... See ‘./configure --help’ for a full list.

~/amhello-1.0 % ./configure --prefix ~/usr CC=gcc-3 \
CPPFLAGS=-I$HOME/usr/include LDFLAGS=-L$HOME/usr/lib

Common configuration settings can be put in prefix/share/config.site
configure: loading site script /home/adl/usr/share/config.site

GCC allows you to do this via cross compiling, You can download the source code for GCC and build a sparc compiler via changing the configuration for what the target architecture is and what the source architecture is

./configure --build=x86_64-sun-solaris2.10 --host=x86_64-sun-solaris2.10 --target=sparc-sun-solaris2.10
i386-pc-solaris2.11

./configure --build=x86_64-redhat-linux --host=x86_64-redhat-linux --target=sparc-sun-solaris2.10

./configure --build=x86_64-linux-gnu --host=x86_64-pc-solaris2.11 --target=sparcv9-solaris2.11

# Provide some information about the compiler.
$as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
set X $ac_compile
ac_compiler=$2
for ac_option in --version -v -V -qversion; do
  { { ac_try="$ac_compiler $ac_option >&5"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;

  ld: fatal: library -lgcc: not found
  ac_cv_env_LDFLAGS_set=''
ac_cv_env_LDFLAGS_value=''
ac_cv_env_LD_FOR_TARGET_set=''
ac_cv_env_LD_FOR_TARGET_value=''
ac_cv_env_LD_set=''
ac_cv_env_LD_value=''

/opt/cross/sysroot/usr/lib/sparcv9/libgcc_s.so.1
/opt/cross/sysroot/usr/lib/sparcv9/libgcc_s.so
/opt/cross/sysroot/usr/lib/libgcc_s.so.1
/opt/cross/sysroot/usr/lib/libgcc_s.so
/usr/lib/libgcc_s.so.1
/usr/lib/libgcc_s.so
/usr/lib/amd64/libgcc_s.so.1
/usr/lib/amd64/libgcc_s.so
/usr/gcc/9/lib/libgcc_s.so.1
/usr/gcc/9/lib/amd64/libgcc_s.so
/usr/gcc/9/lib/amd64/libgcc_s.so.1
/usr/gcc/9/lib/libgcc-unwind.map
/usr/gcc/9/lib/libgcc_s.so

If you also intend to build binutils (either to upgrade an existing installation or for use in place of the corresponding tools of your OS), unpack the binutils distribution either in the same directory or a separate one. In the latter case, add symbolic links to any components of the binutils you intend to build alongside the compiler (bfd, binutils, gas, gprof, ld, opcodes, …) to the directory containing the GCC sources.

Likewise the GMP, MPFR and MPC libraries can be automatically built together with GCC. You may simply run the contrib/download_prerequisites script in the GCC source directory to set up everything. Otherwise unpack the GMP, MPFR and/or MPC source distributions in the directory containing the GCC sources and rename their directories to gmp, mpfr and mpc, respectively (or use symbolic links with the same name).

##########  ##########  ##########\/
####  ####  zfs
##########  ##########  ##########\/

#zpool(8)
#zfs_encrypt(8)
#zfs_share(8)

A dataset is identified by a unique path  within
the ZFS namespace. For example:
pool/{filesystem,volume(raw/block),snapshot(filesystem@name)}

.zfs/snapshot
/etc/vfstab

zfs
  allow
  clone
  create
  destroy
  diff
  get
  groupspace
  hold
  holds
  Key
  list
  inherit
  mount
  promote
  receive
  release
  rename
  rollback
  send
  set
    compression=on [dataset]
  share
  snapshot
  unshare
  upgrade
  userspace
  unallow

native props:
  available (space for dataset, all its children)
  compressratio
  creation (time of dataset creation)
  origin (clones: snapshot from which created. cannot be destroyed while clone exists)
  referenced (data accessible by dataset, may/not be shared with other datasets in the pool)
  used (checked against dataset's quota & reserve)
  usedbychildren (of this dataset)
  usedbydataset
  usedbyrefreservation
  usedbysnapshots (in this dataset)
  volblocksize=blocksize
  effectivereadlimit (max thruput)
  effectivewritelimit (lowest data limit at any point between root & dataset)

native props (behaviour):
  aclmode=discard | mask | passthrough
  refreservation=size | none | auto
  aclinherit=discard | noallow | restricted | passthrough | passthrough-x | passthrough-mode-preserve
  atime=on | off
  canmount=on | off | noauto
  checksum=on | off | fletcher2,| fletcher4 | sha256 | sha256+mac (change affects only newly written data)
  compression=on | off | lzjb | gzip | gzip-N | zle | lz4
  copies=1 | 2 | 3
  dedup=on | off | verify | sha256[,verify]
  exec=on | off
  logbias = latency | throughput
  mountpoint=path | none | legacy
  quota=size | none
  readlimit=size | none | default
  writelimit=size | none | default
  defaultreadlimit=size | none
  defaultwritelimit=size | none (applies only to descendents)
  sync=standard | always | disabled
  refquota=size | none
  refreservation=size | none | auto
  rstchown=on | off
  sharenfs=on | off
  volsize=size

PROPERTY          MOUNT OPTION
devices                 devices/nodevices
mountpoint              mountpoint
exec                    exec/noexec
readonly                ro/rw
setuid                  setuid/nosetuid
xattr                   xattr/noxattr
rstchown                rstchown/norstchown

##########  ##########  ##########\/
####  ####  zones
##########  ##########  ##########\/

zonestat -r "summary" (report resources)
  -z (report resources)

zoneadm list -c (all configured zones)
  -i (all installed zones)
  -v (verbose)
  -b (show only specified brand)
zoneadm apply (recongifure running zone maintained thru zonecfg, no reboot)
  -n (dry run)

zonecfg -r (live edit mode)
  -z (zonename)
zonecfg info -a (all, even default values)

##########  ##########  ##########\/
####  ####  pkg
##########  ##########  ##########\/

pkgadm addcert -e /root/pkg.oracle.com.key.pem \
-f pem \
-n solsr \
/root/pkg.oracle.com.certificate.pem

pkgadm addcert -n solsr -e /root/pkg.oracle.com.key.pem \
/root/pkg.oracle.com.certificate.pem

pkgrecv -c

##########  ##########  ##########\/
####  ####  pkgserver & pkgdepot
##########  ##########  ##########\/

vi /var/adm/messages

http://localhost:1008/solaris/cd5f859ae60848b1316dffc9131991a8dcad0e4f/catalog/1/catalog.attrs

pkg5srv:x:97:97:pkg(7) server UID:/:
uid=97(pkg5srv) gid=97(pkg5srv)

/etc/apache2/2.4/conf.d.

svcprop -a (all)

man pkg.depotd
pkg/
  address
  content_root 
    - def = /usr/share/lib/pkg
  inst_root (repo data)
  port
    - def = 80 (no ssl) = 443 (ssl)
  proxy_base
  ssl_cert_file
  ssl_key_fileq

netstat -s (all status)
  -P tcp
  -i (interfaces)
  -a (sockets)
  -f inet
  -r (routes)

svcs -d (depends for instance)
  -D (depends on instance)
  -L (restarter logfile) (-x last exit)
  -l (all info)
  -p (associated processes)
  -x (explain service states)

svcadm enable
  -r (recursively enable deps)
  -s (enable, wait for online or degraded state, may return early)
  -t (temp until next boot)
  restart
  refresh (update running config)

svccfg -v (verbose)
  set [-v(on)|-V(off)]
  refresh
  listprop
  setprop (pkg/port) = type: [value]
  delprop (pg/name)

ps -j (session ID, process group ID)
  -l (long listing)
  -e (every process now running)
  -A (info for all processes)
  -p (only for listed PID#'s)
  -P (show processor bound to process or lwp)
  -z (from global zone - specify zone to see)
  -Z (show associated zone)
  -f

##########  ##########  ##########\/
####  ####  daemon design
##########  ##########  ##########\/

#Patchset search:
https://updates.oracle.com/Orion/AdvancedSearch/process_form?product=17450&product_any=Select+a+Product+or+Product+Family&product_none=&product_auto=on&release=400000110000&release_any=Select+a+Release&release_none=&release_auto=off&compatible_with_any=Select+Compatible+Point+Release&compatible_with_none=&compatible_with_auto=off&compatible_baselines_any=Select+Compatible+Product+Codeline&compatible_baselines_none=&compatible_baselines_auto=off&plat_lang=23P&patch_type=all&description=&priority=any&patch_target=any&updated_in_last=&timeframe=D&file=&version=&not_included_in=&not_included_in_any=Select+a+Patchset&not_included_in_none=&not_included_in_auto=on&display_type=&search_style=9&orderby=&direction=&old_type_list=&gobuttonpressed=&sortcolpressed=&tab_number=&c_release_parent=product&c_product_child=release&c_compatible_with_parent=product&c_product_child=compatible_with&c_not_included_in_parent=product&c_product_child=not_included_in&c_not_included_in_parent=release&c_release_child=not_included_in&c_compatible_with_parent=release&c_release_child=compatible_with&c_compatible_baselines_parent=release&c_release_child=compatible_baselines&c_compatible_baselines_parent=compatible_with&c_compatible_with_child=compatible_baselines&c_compatible_baselines_parent=product&c_product_child=compatible_baselines#query_link
#Patchset page:
https://updates.oracle.com/Orion/PatchDetails/process_form?patch_num=31463803&aru=23688499&release=400000110000&plat_lang=23P&patch_num_id=3722325&

##########  ##########  ##########\/
####  ####  cc
##########  ##########  ##########\/

martel.meyers@dev-hial1:~$ uname -a
SunOS dev-hial1 5.11 11.4.5.3.0 sun4v sparc sun4v

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
With types:
--with-java[=PREFIX]            Path to Java home.
--with-oracle[=ORACLE_HOME]    Path to Oracle.

./configure --build=x86_64-sun-solaris2.10 --host=x86_64-sun-solaris2.10 --target=sparc-sun-solaris2.10

git branch --show-current

#On Jump1:
cd /export/pkgs/splunk
git config --global http.proxy http://192.168.60.250:8008
git clone https://github.com/splunk/collectd-plugins.git
git clone https://github.com/collectd/collectd.git
cd collectd && git checkout collectd-5.9
cp -f ../collectd-plugins/src/* src/
git apply ../collectd-plugins/add-splunk-plugins.patch
tar -cvf sparc-collectd.tar collectd/

##########  ##########  ##########\/
####  ####  git large file fix
##########  ##########  ##########\/

git filter-branch --force --index-filter \
'git rm --cached --ignore-unmatch cc-knpdb11-sparc.pkg' \
  --prune-empty --tag-name-filter cat -- --all

git filter-branch --force --index-filter \
  'git rm --cached --ignore-unmatch pkg-knpdb11-sparc.p5p' \
  --prune-empty --tag-name-filter cat -- --all

git gc --prune=now

git push origin --force --all
